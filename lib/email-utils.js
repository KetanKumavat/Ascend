import { Resend } from "resend";

const resend = new Resend(process.env.RESEND_API_KEY);

export async function sendDailySummaryEmail(data) {
    const { summary, organizationMembers } = data;

    const formattedDate = new Date(summary.date).toLocaleDateString("en-US", {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
    });

    // Create HTML email content
    const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Daily Development Summary - ${summary.project.name}</title>
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; background-color: #f8f9fa; }
            .container { max-width: 800px; margin: 0 auto; background: white; border-radius: 12px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); overflow: hidden; }
            .header { background: linear-gradient(135deg, #84cc16 0%, #65a30d 100%); color: white; padding: 30px; text-align: center; }
            .header h1 { margin: 0; font-size: 28px; font-weight: 700; }
            .header p { margin: 10px 0 0; opacity: 0.9; font-size: 16px; }
            .content { padding: 30px; }
            .stats { display: flex; justify-content: space-around; margin: 20px 0; padding: 20px; background: #f8f9fa; border-radius: 8px; }
            .stat { text-align: center; }
            .stat-number { font-size: 24px; font-weight: 700; color: #84cc16; }
            .stat-label { font-size: 14px; color: #666; margin-top: 5px; }
            .summary-content { margin: 30px 0; }
            .summary-content h2 { color: #1f2937; margin-top: 30px; margin-bottom: 15px; }
            .summary-content h3 { color: #374151; margin-top: 25px; margin-bottom: 10px; }
            .summary-content ul, .summary-content ol { margin: 10px 0; padding-left: 20px; }
            .summary-content li { margin: 5px 0; }
            .summary-content p { margin: 15px 0; }
            .summary-content code { background: #f3f4f6; padding: 2px 6px; border-radius: 4px; font-family: 'Courier New', monospace; }
            .footer { background: #f8f9fa; padding: 20px; text-align: center; border-top: 1px solid #e5e7eb; }
            .footer p { margin: 0; color: #666; font-size: 14px; }
            .badge { display: inline-block; background: #84cc16; color: white; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; margin: 2px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>ðŸ“Š Daily Development Summary</h1>
                <p>${summary.project.name} â€¢ ${formattedDate}</p>
            </div>
            
            <div class="content">
                <div class="stats">
                    <div class="stat">
                        <div class="stat-number">${summary.commitsCount}</div>
                        <div class="stat-label">Commits</div>
                    </div>
                    <div class="stat">
                        <div class="stat-number">+${
                            summary.totalAdditions || 0
                        }</div>
                        <div class="stat-label">Lines Added</div>
                    </div>
                    <div class="stat">
                        <div class="stat-number">-${
                            summary.totalDeletions || 0
                        }</div>
                        <div class="stat-label">Lines Removed</div>
                    </div>
                </div>

                <div class="summary-content">
                    ${summary.content
                        .replace(/\n/g, "<br>")
                        .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")}
                </div>
            </div>

            <div class="footer">
                <p>This summary was automatically generated by Ascend â€¢ ${new Date().getFullYear()}</p>
            </div>
        </div>
    </body>
    </html>
    `;

    // Send emails to all organization members
    const emailPromises = organizationMembers.map((member) =>
        resend.emails.send({
            from: "Ascend <ascend@ketankumavat.me>",
            to: member.email,
            subject: `Daily Dev Summary: ${summary.project.name} - ${formattedDate}`,
            html: htmlContent,
            text: `Daily Development Summary - ${summary.project.name}\n\n${summary.content}`,
        })
    );

    const emailResults = await Promise.allSettled(emailPromises);
    const successfulEmails = emailResults.filter(
        (result) => result.status === "fulfilled"
    ).length;
    const failedEmails = emailResults.filter(
        (result) => result.status === "rejected"
    ).length;

    return {
        success: true,
        emailsSent: successfulEmails,
        emailsFailed: failedEmails,
        recipients: organizationMembers.length,
        message: `Daily summary sent to ${successfulEmails} recipients`,
    };
}

export async function sendIssueAssignmentEmail(data) {
    const { issue, assignee, project, reporter } = data;

    const priorityColors = {
        LOW: "#10b981",
        MEDIUM: "#f59e0b",
        HIGH: "#ef4444",
        URGENT: "#dc2626",
    };

    const priorityColor = priorityColors[issue.priority] || "#6b7280";

    const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Issue Assignment - ${issue.title}</title>
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 20px; background-color: #f8f9fa; }
            .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 12px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); overflow: hidden; }
            .header { background: linear-gradient(135deg, #84cc16 0%, #65a30d 100%); color: white; padding: 30px; text-align: center; }
            .header h1 { margin: 0; font-size: 24px; font-weight: 700; }
            .header p { margin: 10px 0 0; opacity: 0.9; font-size: 16px; }
            .content { padding: 30px; }
            .issue-title { font-size: 20px; font-weight: 600; color: #1f2937; margin-bottom: 20px; }
            .meta-info { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }
            .meta-row { display: flex; justify-content: space-between; margin: 10px 0; }
            .meta-label { font-weight: 600; color: #6b7280; }
            .meta-value { color: #1f2937; }
            .priority-badge { display: inline-block; padding: 4px 12px; border-radius: 20px; color: white; font-size: 12px; font-weight: 600; }
            .description { margin: 20px 0; padding: 20px; background: #f9fafb; border-left: 4px solid #84cc16; border-radius: 0 8px 8px 0; }
            .footer { background: #f8f9fa; padding: 20px; text-align: center; border-top: 1px solid #e5e7eb; }
            .footer p { margin: 0; color: #666; font-size: 14px; }
            .cta-button { display: inline-block; background: #84cc16; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; margin: 20px 0; }
            .meta-value,
            .priority-badge {
                padding-left: 8px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>ðŸŽ¯ New Issue Assignment</h1>
                <p>${project.name}</p>
            </div>
            
            <div class="content">
                <p>Hi ${assignee.name},</p>
                <p>You have been assigned a new issue in <strong>${
                    project.name
                }</strong>:</p>
                
                <div class="issue-title">${issue.title}</div>
                
                <div class="meta-info">
                    <div class="meta-row">
                        <span class="meta-label">Priority:</span>
                        <span class="priority-badge" style="background-color: ${priorityColor}">
                            ${issue.priority}
                        </span>
                    </div>
                    <div class="meta-row">
                        <span class="meta-label">Status:</span>
                        <span class="meta-value">${issue.status.replace(
                            "_",
                            " "
                        )}</span>
                    </div>
                    <div class="meta-row">
                        <span class="meta-label">Reported by:</span>
                        <span class="meta-value">${reporter.name}</span>
                    </div>
                    <div class="meta-row">
                        <span class="meta-label">Created:</span>
                        <span class="meta-value">${new Date(
                            issue.createdAt
                        ).toLocaleDateString()}</span>
                    </div>
                </div>

                ${
                    issue.description
                        ? `
                <div class="description">
                    <strong>Description:</strong><br>
                    ${issue.description
                        .replace(/\n/g, "<br>")
                        .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")}
                </div>
                `
                        : ""
                }

                <p>Please review the issue and start working on it when you're ready.</p>
            </div>

            <div class="footer">
                <p>This notification was sent by Ascend â€¢ ${new Date().getFullYear()}</p>
            </div>
        </div>
    </body>
    </html>
    `;

    const emailResult = await resend.emails.send({
        from: "Ascend <ascend@ketankumavat.me>",
        to: assignee.email,
        subject: `New Issue Assigned: ${issue.title} - ${project.name}`,
        html: htmlContent,
        text: `New Issue Assignment\n\nProject: ${project.name}\nTitle: ${
            issue.title
        }\nPriority: ${issue.priority}\nReported by: ${reporter.name}\n\n${
            issue.description || "No description provided"
        }`,
    });

    return {
        success: true,
        emailsSent: 1,
        emailsFailed: 0,
        recipients: 1,
        message: `Issue assignment email sent to ${assignee.name}`,
        emailId: emailResult.data?.id,
    };
}
